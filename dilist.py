#!/usr/bin/env python
# encoding: utf-8

'Generates a list of n n16Ns in their native state in the PLUMED format for gpta.x'

from sys import argv

try:
   assert( len(argv) == 2 )
   n16n_count = int(argv[1])
except (AssertionError, ValueError):
   print "Run as:", argv[0], "[N n16Ns]"
   exit()


natoms_per = 118

atoms = (1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117)
types = (1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 4, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3)
phi_angles = (-0.916534689, -0.929819800, -1.049550805, -1.041154572, -1.011001484, -0.933287244, -1.013879063, -1.019150177, -1.048684099, -1.074265306, -1.222866110, -1.166179294, -0.938618338, -1.046680165, -0.936039097, -1.109268394, -1.089794522, -1.031464802, -1.032633500, -1.023924122, -1.037797952, -1.021604977, -1.012496643, -0.961922953, -0.942677981, -1.076215482, -1.227024094, -1.324779392, -1.112972035)
psi_angles = (-2.219650992, -0.903152947, -0.914896435, -0.843951850, -0.845140468, -0.887602572, -0.993107776, -0.844376199, -0.862470917, -0.822952739, -0.754798577, -0.679689453, -0.682752549, 0.999959180, -0.990044913, -0.869111229, -0.826239995, -0.794532680, -0.863210110, -0.859710665, -0.862623867, -0.844903076, -0.866327395, -0.878446295, -0.938418091, -0.980703844, -0.734689995, -0.615503665, -0.619509569)

psis = []
phis = []

for i, type in enumerate(types):

   try:
      if type == 1 or type == 4:
         psis.append ( [atoms[i], atoms[i+1], atoms[i+2], atoms[i+3]] )

      if type == 3:
         phis.append ( [atoms[i], atoms[i+1], atoms[i+2], atoms[i+3]] )
   except IndexError:
      pass

#print
print "PRINT W_STRIDE 1"
print ""
print "ALPHABETA NDIH", 58*n16n_count

for n in range(0,natoms_per*n16n_count,natoms_per):
   for i, phi in enumerate(phis):
      for atom in phi:
         print atom+n,
      print phi_angles[i]

   for i, psi in enumerate(psis):
      for atom in psi:
         print atom+n,
      print psi_angles[i]

print ""
print "ENDMETA"
